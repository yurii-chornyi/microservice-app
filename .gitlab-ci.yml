# .gitlab-ci.yml

# Frontend build
front-build:
  stage: build
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  script:
    - echo "Building frontend image"
    - cd frontend && docker build -t $CI_REGISTRY_IMAGE/frontend-img:latest .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" $CI_REGISTRY --password-stdin
    - docker push $CI_REGISTRY_IMAGE/frontend-img:latest
  only:
    changes:
      - frontend/**/*  # Запускається лише при змінах у директорії frontend

# Log Message Processor build
log-msg-proc-build:
  stage: build
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  script:
    - echo "Building log message processor image"
    - cd log-message-processor && docker build -t $CI_REGISTRY_IMAGE/log-img:latest .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" $CI_REGISTRY --password-stdin
    - docker push $CI_REGISTRY_IMAGE/log-img:latest
  only:
    changes:
      - log-message-processor/**/*  # Запускається лише при змінах у директорії log-message-processor

# Todos API build
todos-build:
  stage: build
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  script:
    - echo "Building todos API image"
    - cd todos-api && docker build -t $CI_REGISTRY_IMAGE/todos-img:latest .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" $CI_REGISTRY --password-stdin
    - docker push $CI_REGISTRY_IMAGE/todos-img:latest
  only:
    changes:
      - todos-api/**/*  # Запускається лише при змінах у директорії todos-api

# Users API build
users-api-build:
  stage: build
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  script:
    - echo "Building users API image"
    - cd users-api && docker build -t $CI_REGISTRY_IMAGE/users-img:latest .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" $CI_REGISTRY --password-stdin
    - docker push $CI_REGISTRY_IMAGE/users-img:latest
  only:
    changes:
      - users-api/**/*  # Запускається лише при змінах у директорії users-api
